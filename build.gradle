plugins {
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'io.sisin'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("io.jsonwebtoken:jjwt-api:0.12.6")
    runtimeOnly('com.mysql:mysql-connector-j')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.3.0')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}

node {
    download.set(true)
    version.set('20.17.0')
}

task npmRunBuild(type: NpmTask) {
    args = ['run', 'build']
    dependsOn npmInstall

    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src/main/webapp'))
    inputs.file('angular.json')
    inputs.file('package.json')
    inputs.file('tsconfig.json')
    inputs.file('tsconfig.app.json')
    outputs.dir(layout.buildDirectory.dir('resources/main/static'))
}

processResources {
    dependsOn npmRunBuild
}

tasks.withType(Test) {
    useJUnitPlatform()
}
